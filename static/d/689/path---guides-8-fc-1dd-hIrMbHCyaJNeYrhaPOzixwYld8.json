{"data":{"markdownRemark":{"html":"<h1>Guides</h1>\n<ul>\n<li><a href=\"#money-calculation-and-manipulation\">Money Calculation and Manipulation</a></li>\n<li><a href=\"#money-comparison\">Money Comparison</a></li>\n<li><a href=\"#money-allocation\">Money Allocation</a></li>\n<li><a href=\"#currency\">Currency</a></li>\n<li><a href=\"#formatting-and-parsing\">Formatting and Parsing</a></li>\n<li><a href=\"#serialization\">Serialization</a></li>\n<li><a href=\"#error-handling\">Error Handling</a></li>\n</ul>\n<h2>Money Calculation and Manipulation</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span>\n\tprice <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'8078'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $80.78</span>\n\tdiscountedPercentage <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 10% discount</span>\n\tdiscountedPrice <span class=\"token operator\">=</span> price<span class=\"token punctuation\">.</span><span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $72.70</span>\n\tshipping <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1550'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $15.50</span>\n\ttotal <span class=\"token operator\">=</span> price<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>shipping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $88.20</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Money Comparison</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span>\n\toverdraft <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GBP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $1000.00</span>\n\tdebt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'900'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GBP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $9.00</span>\n\tcanBorrowMore <span class=\"token operator\">=</span> debt<span class=\"token punctuation\">.</span><span class=\"token function\">lessThan</span><span class=\"token punctuation\">(</span>overdraft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Money Allocation</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span>\n\tinheritance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5000000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EUR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tratios <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ratios</span>\n\tinheritedShares <span class=\"token operator\">=</span> inheritance<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>ratios<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\texpenses <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'79595'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EUR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\texpenseShares <span class=\"token operator\">=</span> expenses<span class=\"token punctuation\">.</span><span class=\"token function\">allocateTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Equal (or nearly equal) shares of expenses</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Currency</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CurrencyStore<span class=\"token punctuation\">,</span> Currency <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n* All ISO currencies are already registered in the `CurrencyStore`.\n* You can find a currency by its code:\n**/</span>\n<span class=\"token keyword\">const</span> gbp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Currency</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GBP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Create a new currency instance</span>\n<span class=\"token keyword\">let</span> gbpSettings <span class=\"token operator\">=</span> gbp<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or you can get the settings directly from the `CurrencyStore`</span>\ngbpSettings <span class=\"token operator\">=</span> CurrencyStore<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GBP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alias: Currency.getSettings()</span>\n\n<span class=\"token comment\">/**\n* You may wish to create a currency without registering it in the store for one-off use.\n*/</span>\n\n<span class=\"token keyword\">const</span> bitcoin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Currency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tcode<span class=\"token punctuation\">:</span> <span class=\"token string\">'XBT'</span><span class=\"token punctuation\">,</span>\n\tsymbol<span class=\"token punctuation\">:</span> <span class=\"token string\">'Ƀ'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n* Or you can register a new currency for re-use\n**/</span>\n\nCurrencyStore<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ETH'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tsymbol<span class=\"token punctuation\">:</span> <span class=\"token string\">'Ξ'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Getting all registered currencies</span>\n<span class=\"token keyword\">const</span> allCurrencies <span class=\"token operator\">=</span> CurrencyStore<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alias: Currency.getAllSettings()</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Formatting and Parsing</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money<span class=\"token punctuation\">,</span> Formatter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> money <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'500000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EUR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoney<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5 000,00 €</span>\nmoney<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tpattern<span class=\"token punctuation\">:</span> <span class=\"token string\">'%ns%s%v'</span><span class=\"token punctuation\">,</span>\n\tthousandsSeparator<span class=\"token punctuation\">:</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n\tdecimalSeparator<span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// €5,000.00</span>\n\nmoney<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tformatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// custom formatter</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Using money.format() is the same as</span>\nFormatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Using money.format(settings) is the same as</span>\nFormatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money<span class=\"token punctuation\">,</span> Formatter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> money <span class=\"token operator\">=</span> Money<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5 000,00 €'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EUR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alias for Formatter.parse</span>\n\nmoney <span class=\"token operator\">=</span> Money<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'€5,000.00'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tcode<span class=\"token punctuation\">:</span> <span class=\"token string\">'EUR'</span><span class=\"token punctuation\">,</span>\n\tthousandsSeparator<span class=\"token punctuation\">:</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n\tdecimalSeparator<span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nmoney <span class=\"token operator\">=</span> Money<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'€5,000.00'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tparser<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// custom parser</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Serialization</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Money <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> money <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Money</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoney<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {amount: '100', currency: 'USD'}</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {amount: '100', currency: 'USD'}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Error Handling {#error-handling}</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\tWealthError<span class=\"token punctuation\">,</span>\n\tCurrencyMismatchError<span class=\"token punctuation\">,</span>\n\tInvalidCurrencyError<span class=\"token punctuation\">,</span>\n\tWrongInputError\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wealth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// operations</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">CurrencyMismatchError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Thrown when the two sides of the operation use different currencies</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">InvalidCurrencyError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Thrown when invalid or missing currency code provided</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WrongInputError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Thrown when bad input is provided to various methods</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WealthError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// All custom errors produced by Wealth inherit `WealthError`</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// All other errors</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"path":"/guides","title":"Guides"}}},"pageContext":{}}